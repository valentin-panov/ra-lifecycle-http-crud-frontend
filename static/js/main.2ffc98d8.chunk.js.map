{"version":3,"sources":["utils/createReq.js","components/CRUD/Container/UpdateBtn/UpdateBtn.js","components/CRUD/Container/NewNote/PostBtn/PostBtn.js","components/CRUD/Container/NewNote/NewNote.js","components/CRUD/Container/Note/DeleteBtn/DeleteBtn.js","components/CRUD/Container/Note/Note.js","components/CRUD/Container/Container.js","components/CRUD/CRUD.js","App.js","reportWebVitals.js","index.js"],"names":["createReq","a","query","method","content","id","baseURL","requestURL","fetch","headers","Headers","body","JSON","stringify","request","ok","Error","status","json","response","UpdateBtn","onUpdateHandler","className","onClick","style","color","green","fontSize","PostBtn","onSubmitHandler","grey","NewNote","props","useState","newNote","setNewNote","onSubmit","event","preventDefault","htmlFor","rows","name","onChange","value","target","type","DeleteBtn","onDeleteHandler","note","red","Note","Container","notes","map","CRUD","setNotes","updateReq","removeId","useEffect","fetchData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ffc98d8.chunk.js","sourcesContent":["export default async function createReq({ query, method, content, id }) {\n  const baseURL = 'https://ra-http-crud.herokuapp.com/';\n  // const baseURL = 'http://localhost:7777/';\n  const requestURL = method === 'DELETE' ? baseURL + `${id}` : baseURL + query;\n\n  const request = await fetch(requestURL, {\n    method: method,\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: content ? JSON.stringify({ content }) : null,\n  });\n  if (!request.ok) {\n    throw new Error('Request error');\n  }\n  const response = request.status === 200 ? await request.json() : null;\n  return response;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { green } from '@material-ui/core/colors';\n\nfunction UpdateBtn({ onUpdateHandler }) {\n  return (\n    <div className='btn UpdateBtn' onClick={onUpdateHandler}>\n      <AutorenewIcon style={{ color: green[500], fontSize: 20 }} />\n    </div>\n  );\n}\n\nUpdateBtn.propTypes = {};\n\nexport default UpdateBtn;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SendIcon from '@material-ui/icons/Send';\nimport { grey } from '@material-ui/core/colors';\n\nfunction PostBtn({ onSubmitHandler }) {\n  return (\n    <div className='btn'>\n      <SendIcon style={{ color: grey[900], fontSize: 20 }} />\n    </div>\n  );\n}\n\nPostBtn.propTypes = {};\n\nexport default PostBtn;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PostBtn from './PostBtn/PostBtn';\n\nfunction NewNote(props) {\n  const [newNote, setNewNote] = useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if (newNote === '') {\n      return;\n    }\n    props.onSubmitHandler(newNote);\n    setNewNote('');\n  };\n  const onChangeHandler = (event) => {\n    const { value } = event.target;\n    setNewNote(value);\n  };\n\n  return (\n    <form className='Note' onSubmit={onSubmitHandler}>\n      <label htmlFor='NewNote' className='NewNote_label'>\n        New note\n      </label>\n      <textarea\n        className='textarea'\n        id='NewNote'\n        rows='3'\n        name='NewNote'\n        onChange={onChangeHandler}\n        value={newNote}\n      />\n      <button type='submit' className='btn PostBtn'>\n        <PostBtn />\n      </button>\n    </form>\n  );\n}\n\nNewNote.propTypes = {};\n\nexport default NewNote;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { red } from '@material-ui/core/colors';\n\nfunction DeleteBtn({ onDeleteHandler, note }) {\n  return (\n    <div className='btn DeleteBtn' onClick={() => onDeleteHandler(note.id)}>\n      <CloseIcon style={{ color: red[500], fontSize: 20 }} />\n    </div>\n  );\n}\n\nDeleteBtn.propTypes = {};\n\nexport default DeleteBtn;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteBtn from './DeleteBtn/DeleteBtn';\n\nfunction Note({ note, onDeleteHandler }) {\n  return (\n    <li className='Note'>\n      {note.content}\n      <DeleteBtn note={note} onDeleteHandler={onDeleteHandler} />\n    </li>\n  );\n}\n\nNote.propTypes = {};\n\nexport default Note;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UpdateBtn from './UpdateBtn/UpdateBtn';\nimport NewNote from './NewNote/NewNote';\nimport Note from './Note/Note';\n\nfunction Container({\n  notes,\n  onDeleteHandler,\n  onUpdateHandler,\n  onSubmitHandler,\n}) {\n  return (\n    <div className='Container'>\n      <header className='Container_Header'>\n        <h2 className='Container_title'>Notes</h2>\n        <UpdateBtn onUpdateHandler={onUpdateHandler} />\n      </header>\n      <ul className='notes_container'>\n        {notes.map((note) => (\n          <Note key={note.id} note={note} onDeleteHandler={onDeleteHandler} />\n        ))}\n      </ul>\n      <NewNote onSubmitHandler={onSubmitHandler} />\n    </div>\n  );\n}\n\nContainer.propTypes = {};\n\nexport default Container;\n","import React, { useState, useEffect } from 'react';\n\nimport createReq from '../../utils/createReq';\nimport Container from './Container/Container';\n\nfunction CRUD() {\n  const [notes, setNotes] = useState([]);\n\n  const updateReq = async () => {\n    const response = await createReq({\n      method: 'GET',\n      query: 'notes',\n    });\n    setNotes([...response]);\n  };\n\n  const onSubmitHandler = async (content) => {\n    await createReq({\n      content,\n      method: 'POST',\n      query: 'notes',\n    });\n    updateReq();\n  };\n\n  const onUpdateHandler = async () => {\n    updateReq();\n  };\n\n  const onDeleteHandler = async (removeId) => {\n    const id = 'notes/' + removeId;\n    await createReq({ id, method: 'DELETE' });\n    updateReq();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      updateReq();\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className='CRUD'>\n      {notes && (\n        <Container\n          notes={notes}\n          onDeleteHandler={onDeleteHandler}\n          onUpdateHandler={onUpdateHandler}\n          onSubmitHandler={onSubmitHandler}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CRUD;\n","import './App.css';\nimport CRUD from './components/CRUD/CRUD';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <CRUD />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}